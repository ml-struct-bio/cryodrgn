[tool:pytest]
# Configuration optimized for parallel execution with pytest-xdist
# Basic configuration
minversion = 6.0
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Parallel execution configuration
addopts = 
    -rA
    --strict-markers
    --strict-config
    --tb=short
    --maxfail=10
    # Warnings configuration
    -W ignore::DeprecationWarning
    -W ignore::PendingDeprecationWarning
    -W ignore::UserWarning:torch.*
    -W ignore::UserWarning:matplotlib.*
    
# Markers for test organization and parallel execution
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    parsing: marks tests as parsing-related
    analysis: marks tests as analysis-related
    traversal: marks tests as traversal-related
    reconstruction: marks tests as reconstruction-related
    utilities: marks tests as utility functions
    forked: marks tests that should run in separate processes
    requires_gpu: marks tests that require GPU access
    requires_large_memory: marks tests that require significant memory
    
# Timeout configuration (useful for parallel execution)
timeout = 300
timeout_method = thread

# Test discovery
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    __pycache__
    .pytest_cache
    htmlcov

# Coverage configuration
# Run with: pytest --cov=cryodrgn --cov-report=html --cov-report=term-missing
# [coverage:run]
# source = cryodrgn
# omit = 
#     */tests/*
#     */conftest.py
#     */__pycache__/*
#     */.*

# Filterwarnings for cleaner output
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:torch.*
    ignore::UserWarning:matplotlib.*
    ignore::RuntimeWarning:numpy.*
    ignore::FutureWarning:pandas.*